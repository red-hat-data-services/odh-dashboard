kind: ConsoleQuickStart
metadata:
  name: seldon-deploy-model-outlier
spec:
  displayName: See outlier scores for predictions to deployed model
  appName: seldon-deploy
  durationMinutes: 10
  icon: 'images/seldon.svg'
  description: See outlier scores for predictions to a deployed image classifier model.
  introduction: |-
    ### This quick start shows you how to launch a TensorFlow image classifier model and detect requests which are outliers.
    Seldon Deploy is a specialist set of tools designed to simplify and accelerate the process of deploying and managing your machine learning models.

    This quick start is a short version of the Seldon (Outlier Detection)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/] tutorial.
  tasks:
    - title: Deploy a pretrained image classifier model
      description: |-
        ### Deploy a pretrained image classifier model
        1. Open Seldon Console and click **Create** to open the deployment creation wizard.
        2. Select the **SeldonDeployment** type and **TensorFlow** protocol and click **Next**.
        3. Choose the **tensorflow** runtime. Enter the model URL: `gs://seldon-models/tfserving/cifar10/resnet32`
        4. Click through the wizard to deploy the model.
      summary:
        success: You have deployed a pretrained tensorflow image classifier
        failed: Try the steps again or see the Seldon (Outlier Detection)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/] tutorial.
    - title: Add an outlier detector
      description: |-
        ### Deploy a pretrained outlier detector for the image classifier
        1. From the image classifier model's page, under **Outlier Detection** click **Configure**.
        2. Enter the model name `cifar10` and the outlier detector URL `gs://seldon-models/alibi-detect/od/OutlierVAE/cifar10`
        3. Click through wizard to deploy the outlier detector.
      summary:
        success: The outlier detector shows as loaded
        failed: Try the steps again or see the Seldon (Outlier Detection)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/] tutorial.
    - title: Make predictions
      description: |-
        ### Make predictions:
        1. Go to the **Make predictions** screen.
        2. Run a single prediction for "truck" using CIFAR-10 data in TensorFlow payload format, available here: (https://deploy.seldon.io/docs/demos/seldon-core/outlier/cifar10_image.json)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/cifar10_image.json]
        3. Run a single prediction for truck outliers using CIFAR-10 data in TensorFlow payload format, available here: [https://deploy.seldon.io/docs/demos/seldon-core/outlier/outlier_image.json](https://deploy.seldon.io/docs/demos/seldon-core/outlier/outlier_image.json)
      summary:
        success: You see OK responses for each of the predictions.
        failed: Try the steps again or see the Seldon (Outlier Detection)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/] tutorial.
    - title: Review Outliers
      description: |-
        ### Review Predictions/Outliers:
        1. Go to the **Requests** screen.
        2. Observe the outlier value for each instance.
        3. Optionally, highlight outliers based on this score and use the filter to see only the outliers as needed.
      summary:
        success: You see outlier scores for each of the predictions.
        failed: Try the steps again or see the Seldon (Outlier Detection)[https://deploy.seldon.io/docs/demos/seldon-core/outlier/] tutorial.
  conclusion: You are now able to identify outliers in requests sent to the model.
  nextQuickStart: []
