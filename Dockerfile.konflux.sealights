# Build arguments
ARG SOURCE_CODE=.

FROM registry.access.redhat.com/ubi9/nodejs-20@sha256:92c0a555301e3b21ecfea8adf461cb34515d87912932e4bcc5cdc434b183a750 as builder

## Build args to be used at this step
ARG SOURCE_CODE

WORKDIR /usr/src/app

## Copying in source code
COPY --chown=default:root ${SOURCE_CODE} /usr/src/app

# Change file ownership to the assemble user
USER default

RUN npm cache clean --force

RUN npm ci --omit=optional --ignore-scripts
RUN cd frontend && npm ci --omit=optional --ignore-scripts
RUN cd backend && npm ci --omit=optional --ignore-scripts

# Set Red Hat Openshift AI logo and links
ENV ODH_LOGO=../images/rhoai-logo.svg
ENV ODH_LOGO_DARK=../images/rhoai-logo-dark-theme.svg
ENV ODH_PRODUCT_NAME="Red Hat OpenShift AI"
ENV ODH_FAVICON="rhoai-favicon.svg"
ENV DOC_LINK="https://docs.redhat.com/en/documentation/red_hat_openshift_ai/"
ENV SUPPORT_LINK="https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true"
ENV COMMUNITY_LINK=""

RUN npm run build

## BEGIN SEALIGHTS
ARG SEALIGHTS_BUILD_NAME=
ARG SEALIGHTS_BSID=
ARG COMMIT=

RUN npm install slnodejs@6.1.1067

USER root

RUN --mount=type=secret,id=sealights-credentials/token \
    SEALIGHTS_TOKEN="$(cat /run/secrets/sealights-credentials/token)"  && cd ./frontend && \
    ./node_modules/.bin/slnodejs scan --token "${SEALIGHTS_TOKEN}" --buildsessionid "${SEALIGHTS_BSID}" --scm none --workspacepath "./public" --es6Modules --scmProvider github --scmBaseUrl https://github.com/red-hat-data-services/odh-dashboard/  --uniqueModuleId frontend && \
    cd ..

RUN --mount=type=secret,id=sealights-credentials/token \
    SEALIGHTS_TOKEN="$(cat /run/secrets/sealights-credentials/token)"  && cd ./backend && \
    ../node_modules/.bin/slnodejs scan --token "${SEALIGHTS_TOKEN}" --buildsessionid "${SEALIGHTS_BSID}" --scm none --workspacepath "./dist" --es6Modules --scmProvider github --scmBaseUrl https://github.com/red-hat-data-services/odh-dashboard/  --uniqueModuleId backend && \
    cd ..

RUN --mount=type=secret,id=sealights-credentials/token \
    SEALIGHTS_TOKEN="$(cat /run/secrets/sealights-credentials/token)"  && \
    ./node_modules/.bin/slnodejs buildend --token "${SEALIGHTS_TOKEN}" --buildsessionid "${SEALIGHTS_BSID}" --ok

RUN --mount=type=secret,id=sealights-credentials/token \
    SEALIGHTS_TOKEN="$(cat /run/secrets/sealights-credentials/token)"  && \
    ./node_modules/.bin/slnodejs instrument --token "${SEALIGHTS_TOKEN}" --buildsessionid "${SEALIGHTS_BSID}" --workspacepath "./frontend/public" --outputpath sl_build --labid sl_LabId_ReplaceMe
RUN rm -rf ./frontend/public
RUN mv -v sl_build ./frontend/public

USER default
## END SEALIGHTS

# Install only production dependencies
# This is needed to remove the dev dependencies that were installed in the previous step
RUN cd backend && npm prune --omit=dev

FROM registry.access.redhat.com/ubi9/nodejs-20@sha256:92c0a555301e3b21ecfea8adf461cb34515d87912932e4bcc5cdc434b183a750 as runtime

WORKDIR /usr/src/app

RUN mkdir /usr/src/app/logs && chmod 775 /usr/src/app/logs

USER 1001:0

COPY --chown=default:root --from=builder /usr/src/app/frontend/public /usr/src/app/frontend/public
COPY --chown=default:root --from=builder /usr/src/app/backend/package.json /usr/src/app/backend/package.json
COPY --chown=default:root --from=builder /usr/src/app/backend/package-lock.json /usr/src/app/backend/package-lock.json
COPY --chown=default:root --from=builder /usr/src/app/backend/node_modules /usr/src/app/backend/node_modules
COPY --chown=default:root --from=builder /usr/src/app/backend/dist /usr/src/app/backend/dist
COPY --chown=default:root --from=builder /usr/src/app/.npmrc /usr/src/app/backend/.npmrc
COPY --chown=default:root --from=builder /usr/src/app/.env /usr/src/app/.env
COPY --chown=default:root --from=builder /usr/src/app/data /usr/src/app/data

WORKDIR /usr/src/app/backend

# BEGIN SEALIGHTS
RUN npm install slnodejs
ENV NODE_OPTIONS="--require ./node_modules/slnodejs/lib/preload.js"

ARG SEALIGHTS_BSID=
ENV SL_BUILD_SESSION_ID=$SEALIGHTS_BSID
ENV SL_TOKENFILE=/usr/src/app/backend/sltoken.txt
ENV SL_LAB_ID=ods-qe-psi-02

USER root
RUN --mount=type=secret,id=sealights-credentials/token cp /run/secrets/sealights-credentials/token $SL_TOKENFILE
RUN chmod +r ${SL_TOKENFILE}
# RUN find /usr/src/app/frontend/public -type f -name "*.js" -exec sed -i 's/sl_LabId_ReplaceMe/ods-qe-psi-02/g' {} +
USER 1001:0
# END SEALIGHTS

CMD ["npm", "run", "start"]

LABEL com.redhat.component="odh-dashboard-container" \
      name="managed-open-data-hub/odh-dashboard-rhel8" \
      description="odh-dashboard" \
      summary="odh-dashboard" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-dashboard" \
      io.k8s.description="odh-dashboard" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"
