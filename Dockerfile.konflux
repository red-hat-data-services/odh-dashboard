# Build arguments
ARG SOURCE_CODE=.

FROM registry.access.redhat.com/ubi9/nodejs-20@sha256:a30f4d8b632eb048c294b1e1fc71c1e574e14ee89cef73101d76d561420f6504 as builder

## Build args to be used at this step
ARG SOURCE_CODE

# Explicitly declare the ARG for TARGETARCH
# This is necessary to ensure that the correct architecture is used in the build stage
ARG TARGETARCH

WORKDIR /usr/src/app

## Copying in source code
COPY --chown=default:root ${SOURCE_CODE} /usr/src/app

# Change file ownership to the assemble user
USER default

RUN npm cache clean --force

# Explicitly install the required esbuild binary for the target platform
# This is necessary because the esbuild binary is not included in the node_modules
# Check https://github.com/evanw/esbuild/blob/main/npm/esbuild/package.json for updates
ARG ESBUILD_VERSION=0.25.3
RUN \
  case ${TARGETARCH} in \
    "amd64")   ESBUILD_PKG="@esbuild/linux-x64@${ESBUILD_VERSION}" ;; \
    "arm64")   ESBUILD_PKG="@esbuild/linux-arm64@${ESBUILD_VERSION}" ;; \
    "ppc64le") ESBUILD_PKG="@esbuild/linux-ppc64le@${ESBUILD_VERSION}" ;; \
    "s390x")   ESBUILD_PKG="@esbuild/linux-s390x@${ESBUILD_VERSION}" ;; \
    *) echo "Unsupported architecture: ${TARGETARCH}" && exit 1 ;; \
  esac \
  && echo "Installing ${ESBUILD_PKG} for ${TARGETARCH}" \
  && npm ci --no-save ${ESBUILD_PKG}

RUN npm ci --omit=optional

# Set Red Hat Openshift AI logo and links
ENV ODH_LOGO=../images/rhoai-logo.svg
ENV ODH_LOGO_DARK=../images/rhoai-logo-dark-theme.svg
ENV ODH_PRODUCT_NAME="Red Hat OpenShift AI"
ENV ODH_FAVICON="rhoai-favicon.svg"
ENV DOC_LINK="https://docs.redhat.com/en/documentation/red_hat_openshift_ai/"
ENV SUPPORT_LINK="https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true"
ENV COMMUNITY_LINK=""

RUN npm run build

FROM registry.access.redhat.com/ubi9/nodejs-20@sha256:a30f4d8b632eb048c294b1e1fc71c1e574e14ee89cef73101d76d561420f6504 as runtime

WORKDIR /usr/src/app

RUN mkdir /usr/src/app/logs && chmod 775 /usr/src/app/logs

USER 1001:0

COPY --chown=default:root --from=builder /usr/src/app/frontend/public /usr/src/app/frontend/public
COPY --chown=default:root --from=builder /usr/src/app/backend/package.json /usr/src/app/backend/package.json
COPY --chown=default:root --from=builder /usr/src/app/backend/package-lock.json /usr/src/app/backend/package-lock.json
COPY --chown=default:root --from=builder /usr/src/app/backend/dist /usr/src/app/backend/dist
COPY --chown=default:root --from=builder /usr/src/app/.npmrc /usr/src/app/backend/.npmrc
COPY --chown=default:root --from=builder /usr/src/app/.env /usr/src/app/.env
COPY --chown=default:root --from=builder /usr/src/app/data /usr/src/app/data

RUN cd backend && npm cache clean --force && npm ci --omit=dev --omit=optional && chmod -R g+w ${HOME}/.npm

WORKDIR /usr/src/app/backend

CMD ["npm", "run", "start"]

LABEL com.redhat.component="odh-dashboard-container" \
      name="managed-open-data-hub/odh-dashboard-rhel8" \
      description="odh-dashboard" \
      summary="odh-dashboard" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-dashboard" \
      io.k8s.description="odh-dashboard" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"
